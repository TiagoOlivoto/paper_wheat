ENV <- df_env$ENV |> as_character()
LAT <- df_env$LAT
LON <- df_env$LON
ALT <- df_env$ALT
START <- df_env$START
env_data <- import("https://bit.ly/df_climate_tidy")
str(env_data)
id_var <- names(env_data)[10:23]
prec <-
env_data %>%
remove_cols(LON:YYYYMMDD, daysFromStart) |>
group_by(env) %>%
summarise(prec = sum(prec))
# compute the mean by environment and year
df_long <-
env_data %>%
remove_cols(LON:YYYYMMDD, daysFromStart) |>
remove_cols(prec) %>%
pivot_longer(-env)
pca <-
df_long %>%
means_by(env, name) %>%
pivot_wider(names_from = name, values_from = value) %>%
left_join(waasb_env, by = "env") %>%
left_join(prec, by = "env") %>%
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3",
env %in% me4 ~ "ME4")) |>
column_to_rownames("env")
mod <-
waasb(df_traits,
env = ENV,
gen = LINHAGEM,
rep = BLOCO,
resp = GY,
wresp = 65) # maior peso para performance
waasb_env <-
mod$GY$model %>%
select_cols(type, Code, Y, WAASB) %>%
subset(type == "ENV") %>%
remove_cols(type) %>%
rename(env = Code)
prec <-
env_data %>%
remove_cols(LON:YYYYMMDD, daysFromStart) |>
group_by(env) %>%
summarise(prec = sum(prec))
# compute the mean by environment and year
df_long <-
env_data %>%
remove_cols(LON:YYYYMMDD, daysFromStart) |>
remove_cols(prec) %>%
pivot_longer(-env)
pca <-
df_long %>%
means_by(env, name) %>%
pivot_wider(names_from = name, values_from = value) %>%
left_join(waasb_env, by = "env") %>%
left_join(prec, by = "env") %>%
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3",
env %in% me4 ~ "ME4")) |>
column_to_rownames("env")
# compute the PCA with
pca_model <- PCA(pca,
quali.sup = 17,
graph = FALSE)
fviz_pca_biplot(pca_model,
repel = TRUE,
habillage = 17,
# font.main = c(8, "bold", "red"),
geom.var = c("arrow", "text"),
title = NULL) +
my_theme +
coord_equal()
# compute the PCA with
pca_model <- PCA(pca,
quali.sup = 17,
graph = FALSE)
View(pca)
mod$GY$model %>%
select_cols(type, Code, Y, WAASB
mod$GY$model %>%
select_cols(type, Code, Y, WAASB)
mod$GY$model %>%
select_cols(type, Code, Y, WAASB)
mod$GY$model %>%
select_cols(type, Code, Y, WAASB) %>%
subset(type == "ENV") %>%
remove_cols(type) %>%
rename(env = Code)
mod$GY$model %>%
select_cols(type, Code, Y, WAASB)
View(df_traits)
me1 <- c("E3", "E4", "E5")
me2 <- c("E1", "E2", "E7")
me3 <- c("E6")
me4 <- c("E8")
df_traits <-
import("https://bit.ly/df_traits_wheat") |>
as_factor(1:6) |>
mutate(me = case_when(ENV %in% me1 ~ "ME1",
ENV %in% me2 ~ "ME2",
ENV %in% me3 ~ "ME3",
ENV %in% me4 ~ "ME4"))
View(df_traits)
mod <-
waasb(df_traits,
env = ENV,
gen = LINHAGEM,
rep = BLOCO,
resp = GY,
wresp = 65) # maior peso para performance
waasb_env <-
mod$GY$model %>%
select_cols(type, Code, Y, WAASB) %>%
subset(type == "ENV") %>%
remove_cols(type) %>%
rename(env = Code)
waasb_env
prec <-
env_data %>%
remove_cols(LON:YYYYMMDD, daysFromStart) |>
group_by(env) %>%
summarise(prec = sum(prec))
# compute the mean by environment and year
df_long <-
env_data %>%
remove_cols(LON:YYYYMMDD, daysFromStart) |>
remove_cols(prec) %>%
pivot_longer(-env)
pca <-
df_long %>%
means_by(env, name) %>%
pivot_wider(names_from = name, values_from = value) %>%
left_join(waasb_env, by = "env") %>%
left_join(prec, by = "env") %>%
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3",
env %in% me4 ~ "ME4")) |>
column_to_rownames("env")
# compute the PCA with
pca_model <- PCA(pca,
quali.sup = 17,
graph = FALSE)
fviz_pca_biplot(pca_model,
repel = TRUE,
habillage = 17,
# font.main = c(8, "bold", "red"),
geom.var = c("arrow", "text"),
title = NULL) +
my_theme +
coord_equal()
ggsave("figs/fig3_pca.png", width = 4, height = 4)
fviz_pca_biplot(pca_model,
repel = TRUE,
habillage = 17,
# font.main = c(8, "bold", "red"),
geom.var = c("arrow", "text"),
title = NULL) +
my_theme
ggsave("figs/fig3_pca.png", width = 4, height = 4)
fviz_pca_biplot(pca_model,
repel = TRUE,
habillage = 17,
# font.main = c(8, "bold", "red"),
geom.var = c("arrow", "text"),
title = NULL) +
my_theme +
labs(fill = "")
fviz_pca_biplot(pca_model,
repel = TRUE,
habillage = 17,
# font.main = c(8, "bold", "red"),
geom.var = c("arrow", "text"),
title = NULL) +
my_theme +
theme(legend.title = element_blank())
ggsave("figs/fig3_pca.png", width = 4, height = 4)
env_data
waasb_env
pca <-
df_long %>%
means_by(env, name) %>%
pivot_wider(names_from = name, values_from = value) %>%
left_join(waasb_env |> rename(GY = Y), by = "env") %>%
left_join(prec, by = "env") %>%
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3",
env %in% me4 ~ "ME4")) |>
column_to_rownames("env")
# compute the PCA with
pca_model <- PCA(pca,
quali.sup = 17,
graph = FALSE)
fviz_pca_biplot(pca_model,
repel = TRUE,
habillage = 17,
# font.main = c(8, "bold", "red"),
geom.var = c("arrow", "text"),
title = NULL) +
my_theme +
theme(legend.title = element_blank())
ggsave("figs/fig3_pca.png", width = 4, height = 4)
#
me1 <- c("E3", "E4", "E5")
me2 <- c("E1", "E2", "E7")
me3 <- c("E6")
me4 <- c("E8")
df_traits <-
import("https://bit.ly/df_traits_wheat") |>
as_factor(1:6) |>
mutate(me = case_when(ENV %in% me1 ~ "ME1",
ENV %in% me2 ~ "ME2",
ENV %in% me3 ~ "ME3",
ENV %in% me4 ~ "ME4"))
env_data <- import("https://bit.ly/df_climate_tidy")
env_data_me <-
env_data |>
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3",
env %in% me4 ~ "ME4"))
# long format for climate data
env_data_d <-
env_data_me |>
remove_cols(env, prec, LON:YYYYMMDD, daysFromStart) |>
pivot_longer(-me)
# long format for grain yield
df_gy_dist <-
df_traits |>
select(me, GY) |>
mutate(name = "GY", .after = me) |>
rename(value = GY)
########## distribution
# bind climate and GY
env_data_d <- rbind(df_gy_dist, env_data_d)
# mean values for each trait
env_data_mean <- means_by(env_data_d, name)
ggplot(env_data_d, aes(x = value, y = me, fill = me)) +
geom_density_ridges(scale = 0.9) +
geom_vline(data = env_data_mean,
aes(xintercept = value),
linetype = 2) +
facet_grid(~name, scales = "free") +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.title = element_blank()) +
scale_y_discrete(expand = expansion(c(0, 0.05))) +
labs(x = "Observed value",
y = "Density",
fill = "") +
my_theme
# plot the distribution of envirotypes
variable <- "dbp"
p1 <-
out2 |>
subset(var == variable) |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=env,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(me~interval, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab('Relative Frequency of the maximum air temperature (ºC)')+
ylab("Environment")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
names.window <-
c('1-Tillering',
'2-Boosting',
'3-heading/flowering',
'4-kernel milk stage',
'5-physiological maturity',
"6-sssss")
out <-
env_typing(env.data = env_data,
env.id = "env",
var.id = c("tmax", "vpd", "rta", "etp", "rh", "dbp"),
by.interval = TRUE,
time.window = c(0, 30, 55, 70, 95, 130),
names.window = names.window)
out2 <-
separate(out,
env.variable,
into = c("var", "freq"),
sep = "_",
extra = "drop") |>
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3",
env %in% me4 ~ "ME4"))
names.window <-
c('1-Tillering',
'2-Boosting',
'3-heading/flowering',
'4-kernel milk stage',
'5-physiological maturity',
"6-sssss")
out <-
env_typing(env.data = env_data,
env.id = "env",
var.id = c("tmax", "vpd", "rta", "etp", "rh", "dbp"),
by.interval = TRUE,
time.window = c(0, 30, 55, 70, 95, 130),
names.window = names.window)
View(env_data)
View(pca)
prec <-
env_data %>%
remove_cols(LON:YYYYMMDD, daysFromStart) |>
group_by(env) %>%
summarise(prec = sum(prec))
prec
out <-
env_typing(env.data = env_data,
env.id = "env",
var.id = c("tmax", "vpd", "rta", "etp", "rh", "prec"),
by.interval = TRUE,
time.window = c(0, 30, 55, 70, 95, 130),
names.window = names.window)
out2 <-
separate(out,
env.variable,
into = c("var", "freq"),
sep = "_",
extra = "drop") |>
mutate(me = case_when(env %in% me1 ~ "ME1",
env %in% me2 ~ "ME2",
env %in% me3 ~ "ME3",
env %in% me4 ~ "ME4"))
# plot the distribution of envirotypes
variable <- "prec"
p1 <-
out2 |>
subset(var == variable) |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=env,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(me~interval, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab('Relative Frequency of the maximum air temperature (ºC)')+
ylab("Environment")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
# by mega environment
p2 <-
out2 |>
subset(var == variable) |> # change the variable here
sum_by(me, freq, interval) |>
ggplot() +
geom_bar(aes(x=Freq, y=me,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_wrap(~interval, nrow = 1)+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab('Relative Frequency of the maximum air temperature (ºC)')+
ylab("Mega Environment")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom') +
scale_fill_discrete(direction = 1)
arrange_ggplot(p1, p2,
heights = c(0.6, 0.4),
tag_levels = "a",
guides = "collect")
p1 <-
out2 |>
subset(var == variable) |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=env,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(me~interval, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab(expression(Relative~Frequency~of~the~potential~evapotranspiration~(mm~day^{-1})))+
ylab("Environment")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
View(pca)
p1 <-
out2 |>
subset(var == variable) |> # change the variable here
ggplot() +
geom_bar(aes(x=Freq, y=env,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_grid(me~interval, scales = "free", space = "free")+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab(expression(Relative~Frequency~of~the~potential~evapotranspiration~(mm~day^{-1})))+
ylab("Environment")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom')
# by mega environment
p2 <-
out2 |>
subset(var == variable) |> # change the variable here
sum_by(me, freq, interval) |>
ggplot() +
geom_bar(aes(x=Freq, y=me,fill=freq),
position = "fill",
stat = "identity",
width = 1,
color = "white",
size=.2)+
facet_wrap(~interval, nrow = 1)+
scale_y_discrete(expand = c(0,0))+
scale_x_continuous(expand = c(0,0))+
xlab(expression(Relative~Frequency~of~the~potential~evapotranspiration~(mm~day^{-1})))+
ylab("Mega Environment")+
labs(fill='Envirotype')+
theme(axis.title = element_text(size=12),
legend.text = element_text(size=9),
strip.text = element_text(size=12),
legend.title = element_text(size=12),
strip.background = element_rect(fill="gray95",size=1),
legend.position = 'bottom') +
scale_fill_discrete(direction = 1)
arrange_ggplot(p1, p2,
heights = c(0.6, 0.4),
tag_levels = "a",
guides = "collect")
plot(pca$GY, pca$trange)
View(pca)
library(metan)
dfge <- ge_simula(30, 3, 3, ge_eff = 30)
ge_plot(dfge)
ge_plot(dfge, ENV, GEN, Y)
View(df_env)
View(dfge)
ge_plot(dfge, ENV, GEN, V1)
MOD <- performs_ammi(dfge, ENV, GEN, REP, GY)
MOD <- performs_ammi(dfge, ENV, GEN, REP, V1)
mod <- performs_ammi(dfge, ENV, GEN, REP, V1)
plot_scores(mod, type = 2)
plot_scores(mod, type = 2, polygon = TRUE)
p1 <- ge_plot(dfge, ENV, GEN, V1)
p2 <- plot_scores(mod, type = 2, polygon = TRUE)
p1 + p2
p2 <- plot_scores(mod, type = 2)
p1 + p2
dfge <- ge_simula(30, 3, 3, ge_eff = 30, gen_eff = 1)
p1 <- ge_plot(dfge, ENV, GEN, V1)
mod <- performs_ammi(dfge, ENV, GEN, REP, V1)
p2 <- plot_scores(mod, type = 2)
p1 + p2
dfge <- ge_simula(5, 3, 3, ge_eff = 30, gen_eff = 1)
p1 <- ge_plot(dfge, ENV, GEN, V1)
mod <- performs_ammi(dfge, ENV, GEN, REP, V1)
p2 <- plot_scores(mod, type = 2)
p1 + p2
gge <- gge(dfge, ENV, GEN, V1)
plot(gge, type = 3)
p1 + p2 p3
p1 + p2 + p3
library(metan)
dfge <- ge_simula(5, 3, 3, ge_eff = 30, gen_eff = 1)
p1 <- ge_plot(dfge, ENV, GEN, V1)
gge <- gge(dfge, ENV, GEN, V1)
p3 <- plot(gge, type = 3)
mod <- performs_ammi(dfge, ENV, GEN, REP, V1)
p2 <- plot_scores(mod, type = 2)
p1 + p2 + p3
